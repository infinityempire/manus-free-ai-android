name: Build Android APK

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Install Android SDK commandline-tools
        run: |
          mkdir -p "$ANDROID_HOME"
          cd "$ANDROID_HOME"
          curl -L -o cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          mkdir -p cmdline-tools
          unzip -q cmdline-tools.zip -d cmdline-tools
          mv cmdline-tools/cmdline-tools cmdline-tools/latest
          rm -f cmdline-tools.zip
          yes | cmdline-tools/latest/bin/sdkmanager --licenses || true

      - name: Install required SDK packages
        run: |
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" \
            "platform-tools" \
            "platforms;android-34" \
            "build-tools;34.0.0"

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Create local.properties
        run: echo "sdk.dir=${ANDROID_SDK_ROOT}" > local.properties

      - name: Clear Gradle Cache
        run: |
          rm -rf ~/.gradle/caches
          ./gradlew --stop

      - name: Touch Java files to force compilation
        run: find app/src/main/java -type f -exec touch {} +

      - name: Gradle clean
        run: ./gradlew clean --no-daemon --warning-mode=all --stacktrace | tee gradle_clean_output.txt

      - name: Show task graph (dry run)
        run: ./gradlew :app:assembleDebug --dry-run --warning-mode=all | tee gradle_dryrun.txt

      - name: Build debug APK (real AI)
        run: |
          ./gradlew :app:clean \
            -POPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
            -PANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }} \
            :app:assembleDebug --no-daemon --stacktrace

      - name: Fallback - force package task if needed
        if: ${{ !cancelled() }}
        run: ./gradlew :app:packageDebug --rerun-tasks --no-build-cache --no-daemon --stacktrace --info --warning-mode=all | tee -a gradle_build_output.txt

      - name: List build outputs
        run: |
          echo "== ls -R app/build/outputs =="
          ls -R app/build/outputs || true
          echo "== find any *.apk =="
          find app -type f -name "*.apk" -print || true

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: manus-free-debug-apk
          path: |
            app/build/outputs/apk/debug/*.apk
            app/build/outputs/apk/**/*.apk
            app/build/outputs/**/*.apk
          if-no-files-found: warn

      - name: Upload Gradle logs
        uses: actions/upload-artifact@v4
        with:
          name: gradle-logs
          path: |
            gradle_build_output.txt
            gradle_clean_output.txt
            gradle_dryrun.txt

